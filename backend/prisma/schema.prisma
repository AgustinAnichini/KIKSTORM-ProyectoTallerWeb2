// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  passwordHash    String    // <— renombrado
  firstName       String
  lastName        String
  address         String?
  role            Role      @default(USER)

  // Recupero de contraseña
  resetToken      String?   @unique
  resetTokenExp   DateTime?

  // Relación con carrito
  carritos        Carrito[]

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Marca {
  id         Int         @id @default(autoincrement())
  nombre     String      @unique
  zapatillas Zapatilla[]
}

model Color {
  id         Int         @id @default(autoincrement())
  nombre     String      @unique
  zapatillas Zapatilla[]
}

model Talle {
  id     Int     @id @default(autoincrement())
  numero Float   @unique
  stock  Stock[]
}

model Zapatilla {
  id          Int      @id @default(autoincrement())
  nombre      String
  marcaId     Int
  colorId     Int
  sexo        Sexo
  precio      Decimal   @db.Decimal(10,2)
  descripcion String? 
  imagen      String?

  marca       Marca     @relation(fields: [marcaId], references: [id])
  color       Color     @relation(fields: [colorId], references: [id])
  stock       Stock[]
}

model Stock {
  id           Int        @id @default(autoincrement())
  zapatillaId  Int
  talleId      Int
  cantidad     Int
  activo       Boolean     @default(true)

  zapatilla    Zapatilla  @relation(fields: [zapatillaId], references: [id])
  talle        Talle      @relation(fields: [talleId], references: [id])
  carritoItems CarritoItem[]
}

model Carrito {
  id          Int           @id @default(autoincrement())
  usuarioId   Int
  estado      EstadoCarrito @default(ACTIVO)
  
  usuario     Usuario       @relation(fields: [usuarioId], references: [id])
  items       CarritoItem[]
  
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model CarritoItem {
  id          Int       @id @default(autoincrement())
  carritoId   Int
  stockId     Int
  cantidad    Int
  
  carrito     Carrito   @relation(fields: [carritoId], references: [id], onDelete: Cascade)
  stock       Stock     @relation(fields: [stockId], references: [id])
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  @@unique([carritoId, stockId])
}

enum EstadoCarrito {
  ACTIVO
  FINALIZADO
  ABANDONADO
}

enum Sexo {
  hombre
  mujer
  niño
}
 
// npx prisma db push --> Sincroniza el esquema directamente con la base de datos (no crea migraciones)
// npx prisma migrate dev --name init  --> Crea una migración con SQL, aplica cambios y guarda historial
